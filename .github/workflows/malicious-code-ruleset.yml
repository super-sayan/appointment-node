#name: Semgrep Scan
#on: [pull_request]

#jobs:
  #semgrep:
    #runs-on: ubuntu-latest
    #steps:
      #- name: Checkout code
        #uses: actions/checkout@v3

      #- name: Install Semgrep
        #run: pip install semgrep

      #- name: Clone malicious-code-ruleset
        #run: git clone https://github.com/apiiro/malicious-code-ruleset.git

      #- name: Run Semgrep with Ruleset
        #run: semgrep --config=malicious-code-ruleset --error
name: Semgrep Scan
on: [pull_request]

jobs:
  semgrep:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Required to post comments in PR
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Semgrep
        run: pip install semgrep

      - name: Clone malicious-code-ruleset
        run: git clone https://github.com/apiiro/malicious-code-ruleset.git

      - name: Run Semgrep with SARIF Output
        run: semgrep --config=malicious-code-ruleset --sarif --output=semgrep-results.sarif

      - name: Upload SARIF Report to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif

      - name: Post Each Finding as Separate PR Comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const sarifFile = 'semgrep-results.sarif';
            const sarifData = JSON.parse(fs.readFileSync(sarifFile, 'utf8'));

            sarifData.runs.forEach(run => {
              run.results.forEach(result => {
                const message = result.message.text;
                const file = result.locations[0].physicalLocation.artifactLocation.uri;
                const line = result.locations[0].physicalLocation.region.startLine;
                const rule = result.ruleId;  // Rule name
                const description = result.rule.description;  // Description of the rule
                
                // Constructing the comment body with all details
                const commentBody = `
                ## ðŸš¨ Semgrep Alert

                ðŸ”´ **${message}**

                ðŸ“Œ **File**: \`${file}\`  
                ðŸ“Œ **Line(s)**: \`${line}\`  
                ðŸ“Œ **Rule Name**: \`${rule}\`  
                `;

                github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  body: commentBody
                });
              });
            });

